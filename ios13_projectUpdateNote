1. UIActivityIndicatorView style change:
UIActivityIndicatorViewStyleGray
UIActivityIndicatorViewStyleWhite
UIActivityIndicatorViewStyleWhiteLarge
=>
UIActivityIndicatorViewStyleMedium
UIActivityIndicatorViewStyleLarge


2. Get keyWindow:
UIApplication.shared.keyWindow 
=> UIApplication.shared.windows[0]

3. presentViewController default modalPresentationStyle change:
UIModalPresentationFullScreen => UIModalPresentationAutomatic(new, often means UIModalPresentationPageSheet)

override presentViewController: UIViewController+LL_Utils

4.bluetooth apply (info.plist):
NSBluetoothPeripheralUsageDescription => NSBluetoothAlwaysUsageDescription

5. UIWebview => WKWebView(WebKit.framework)

6.prohibit kvc access:
if #available(iOS 13.0, *) {
    let arrStr = NSMutableAttributedString(string: field.placeholder!, attributes: [NSAttributedString.Key.foregroundColor: UIColor.systemGray3, NSAttributedString.Key.font: UIFont.systemFont(ofSize: 15)])
    field.attributedPlaceholder = arrStr
} else {
    field.setValue(UIColor.systemGray3, forKeyPath: "_placeholderLabel.textColor")
    field.setValue(UIFont.systemFont(ofSize: 15), forKeyPath:"_placeholderLabel.font")
}

if #available(iOS 13.0, *) {
      let searchTextField =  searchBar.searchTextField
} else {
      let searchTextField = searchBar.value(forKey: "_searchField")
}

@implementation UISearchBar (SearchTextField)

- (UITextField *)atu_searchTextField{
    if ([UIDevice currentDevice].systemVersion.floatValue >= 13.0) {
        //ide sdk version check
#ifdef __IPHONE_13_0
        return self.searchTextField;
#else
        return [self valueForKey:@"searchTextField"];
#endif
    }
    return [self valueForKey:@"_searchField"];
}

@end

//* UISearchBarBackground remove handle:
if (@available(iOS 13.0, *)) {
        [[_searchBar.subviews objectAtIndex:0].subviews objectAtIndex:0].hidden = YES;
} else {
        [[[_searchBar.subviews objectAtIndex:0].subviews objectAtIndex:0]removeFromSuperview];
}


